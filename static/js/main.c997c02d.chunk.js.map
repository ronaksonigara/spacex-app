{"version":3,"sources":["image/spacex.jpeg","Component/Navigaton.js","Component/Home.js","Component/LaunchpadCard.js","Component/Launchpads.js","Component/MissionCard.js","Component/Missions.js","Component/Payloads.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","useState","navExpanded","setNav","handleSelect","Navbar","onToggle","expanded","fixed","collapseOnSelect","expand","bg","variant","className","to","Toggle","aria-controls","Collapse","onSelect","id","Nav","Link","as","Home","alt","src","banner","LaunchpadCard","props","data","Card","active","retired","status","style","width","Body","Title","location","name","region","Text","details","Launchpads","items","setItems","filters","setFilters","showFilter","setShowFilter","useEffect","fetchDate","a","async","axios","get","res","filterArray","map","item","indexOf","push","handlefilter","e","target","getAttribute","ButtonGroup","index","Fragment","key","Button","data-filter","onClick","mission_name","description","ListGroup","payload_ids","Item","Missions","MissionCard","mission_id","Payloads","match","params","payload_id","payload_type","nationality","manufacturer","reused","payload_mass_kg","payload_mass_lbs","orbit","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c997c02d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spacex.6fb731d6.jpeg\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nfunction Navigation() {\r\n  const [navExpanded, setNav] = useState(false);\r\n\r\n  const setNavExpanded = expanded => {\r\n    setNav(expanded);\r\n  };\r\n  const handleSelect = () => {\r\n    setNav(false);\r\n  };\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        onToggle={setNavExpanded}\r\n        expanded={navExpanded}\r\n        fixed=\"top\"\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n      >\r\n        <Link className=\"navbar-brand\" to=\"/spacex-app\">\r\n          Space X\r\n        </Link>\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse onSelect={handleSelect} id=\"responsive-navbar-nav\">\r\n          <Nav onSelect={handleSelect}>\r\n            <Link to=\"/launchpads\">\r\n              <Nav.Link as=\"span\">Launchpads</Nav.Link>\r\n            </Link>\r\n            <Link to=\"/missions\">\r\n              <Nav.Link as=\"span\">Missions</Nav.Link>\r\n            </Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport banner from \"../image/spacex.jpeg\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home-container spacex-container\">\r\n      <img alt=\"Space X\" className=\"home-baner\" src={banner} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction LaunchpadCard(props) {\r\n  const { data } = props;\r\n  const status = {\r\n    active: \"success\",\r\n    \"under construction\": \"primary\",\r\n    retired: \"secondary\"\r\n  };\r\n  return (\r\n    <Card bg={status[data.status]} style={{ width: \"18rem\" }}>\r\n      <Card.Body>\r\n        <Card.Title>\r\n          {data.location.name + \",\" + data.location.region}\r\n        </Card.Title>\r\n        <Card.Text>{data.details}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LaunchpadCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport LaunchpadCard from \"./LaunchpadCard\";\r\n\r\nfunction Launchpads() {\r\n  const [items, setItems] = useState([]);\r\n  const [filters, setFilters] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(\"all\");\r\n  useEffect(() => {\r\n    fetchDate();\r\n  }, []);\r\n  const fetchDate = async () => {\r\n    const res = await axios.get(\"https://api.spacexdata.com/v3/launchpads\");\r\n    let data = res.data;\r\n    setItems(data);\r\n    let filterArray = [];\r\n    data.map(item => {\r\n      if (filterArray.indexOf(item.status) === -1) {\r\n        filterArray.push(item.status);\r\n      }\r\n    });\r\n    setFilters(filterArray);\r\n  };\r\n\r\n  const cardList = dataList => {\r\n    return dataList.map((item, index) => {\r\n      return showFilter === \"all\" ? (\r\n        <LaunchpadCard key={item.id} data={item} />\r\n      ) : (\r\n        showFilter === item.status && (\r\n          <LaunchpadCard key={item.id} data={item} />\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const handlefilter = e => {\r\n    setShowFilter(e.target.getAttribute(\"data-filter\"));\r\n  };\r\n\r\n  const filterList = list => {\r\n    return list.map((item, index) => {\r\n      return (\r\n        <React.Fragment key={item}>\r\n          {index === 0 && (\r\n            <Button\r\n              className=\"flter-button\"\r\n              data-filter=\"all\"\r\n              onClick={handlefilter}\r\n            >\r\n              All\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className=\"flter-button\"\r\n            data-filter={item}\r\n            onClick={handlefilter}\r\n          >\r\n            {item}\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ButtonGroup className=\"filter-wrapper\">\r\n        {filterList(filters)}\r\n      </ButtonGroup>\r\n\r\n      <div className=\" launchpad-container spacex-cardwrapper\">\r\n        {cardList(items)}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Launchpads;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\n\r\nfunction LaunchpadCard(props) {\r\n  const { data } = props;\r\n\r\n  const missionPayLoads = payloadsData => {\r\n    return payloadsData.map(item => {\r\n      return (\r\n        <ListGroup.Item key={item}>\r\n          <Link className=\"card-link\" to={`/payloads/${item}`}>\r\n            {item}\r\n          </Link>\r\n        </ListGroup.Item>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"18rem\" }}>\r\n      <Card.Body>\r\n        <Card.Title>{data.mission_name}</Card.Title>\r\n        <Card.Text>{data.description}</Card.Text>\r\n        <ListGroup variant=\"flush\">\r\n          {missionPayLoads(data.payload_ids)}\r\n        </ListGroup>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LaunchpadCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport MissionCard from \"./MissionCard\";\r\n\r\nfunction Missions() {\r\n  const [items, setItems] = useState([]);\r\n  useEffect(() => {\r\n    fetchDate();\r\n  }, []);\r\n  const fetchDate = async () => {\r\n    const res = await axios.get(\"https://api.spacexdata.com/v3/missions\");\r\n    let data = res.data;\r\n    setItems(data);\r\n  };\r\n\r\n  const cardList = dataList => {\r\n    return dataList.map((item, index) => {\r\n      return <MissionCard key={item.mission_id} data={item} />;\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"spacex-container spacex-cardwrapper\">{cardList(items)}</div>\r\n  );\r\n}\r\n\r\nexport default Missions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Payloads({ match }) {\r\n  const [items, setItems] = useState([]);\r\n  useEffect(() => {\r\n    const fetchDate = async () => {\r\n      const res = await axios.get(\r\n        `https://api.spacexdata.com/v3/payloads/${match.params.id}`\r\n      );\r\n      let data = res.data;\r\n      setItems(data);\r\n    };\r\n    fetchDate();\r\n  }, [match]);\r\n  // const fetchDate = async () => {\r\n  //   const res = await axios.get(\r\n  //     `https://api.spacexdata.com/v3/payloads/${match.params.id}`\r\n  //   );\r\n  //   let data = res.data;\r\n  //   setItems(data);\r\n  // };\r\n  return (\r\n    <div className=\"spacex-container payload-container\">\r\n      <h1 className=\"payload-primary-title\">\r\n        {items.payload_id + \"-\" + items.payload_type}\r\n      </h1>\r\n      <h2 className=\"payload-primary-subtitle\">Nation - {items.nationality}</h2>\r\n      <p className=\"payload-primary-label\">\r\n        Manufacturer - {items.manufacturer}\r\n      </p>\r\n      {items.reused && <p>{items.payload_id} was reused</p>}\r\n      {items.payload_mass_kg && items.payload_mass_lbs && (\r\n        <p>\r\n          Weight - {items.payload_mass_kg} Kg {items.payload_mass_lbs} LBS\r\n        </p>\r\n      )}\r\n      <p>Orbit - {items.orbit}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payloads;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.scss\";\r\n\r\nimport Navigation from \"./Component/Navigaton\";\r\nimport Home from \"./Component/Home\";\r\nimport Launchpads from \"./Component/Launchpads\";\r\nimport Missions from \"./Component/Missions\";\r\nimport Payloads from \"./Component/Payloads\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/spacex-app\" exact component={Home} />\r\n        <Route path=\"/launchpads\" exact component={Launchpads} />\r\n        <Route path=\"/missions\" exact component={Missions} />\r\n        <Route path=\"/payloads/:id\" exact component={Payloads} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}